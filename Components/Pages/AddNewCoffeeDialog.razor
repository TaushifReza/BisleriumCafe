@using System.Diagnostics
@using BisleriumCafe.Data.Service

@inject Microsoft.AspNetCore.Components.NavigationManager NavManager;

<MudDialog Style="width: 400px">
    <DialogContent>
        @if (!string.IsNullOrEmpty(_addCoffeeErrorMessage))
        {
            <MudAlert Severity="Severity.Error">@_addCoffeeErrorMessage</MudAlert>
        }
        <MudForm @ref="_form" @bind-IsValid="@_success" @bind-Errors="@_errors" @onsubmit="AddNewCoffee">
            <MudTextField T="string" Label="Coffee Name" Required="true" RequiredError="Coffee Name is required!"
                          @bind-Value="_coffeeName" Variant="Variant.Outlined"/>

            <MudTextField T="string" Label="Coffee Description" Required="false" @bind-Value="_coffeeDescription" AutoGrow
                          Variant="Variant.Outlined"/>

            <MudTextField T="decimal" Label="Coffee Price" Required="true" RequiredError="Coffee Price is required!"
                          @bind-Value="_coffeePrice" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.AttachMoney" AdornmentColor="Color.Warning" Variant="Variant.Outlined"/>

            <div class="d-flex align-center justify-space-between mt-4">
                 <MudButton Variant="Variant.Filled" Color="Color.Secondary" DisableElevation="true" OnClick="@(() => _form.ResetAsync())" Class="mx-2" Icon="@Icons.Material.Filled.ResetTv">Reset</MudButton>

                 <MudButton Variant="Variant.Filled" Color="Color.Success" Disabled="@(!_success)" Class="ml-auto" ButtonType="ButtonType.Submit" Icon="@Icons.Material.Filled.Add">
                    Add
                </MudButton>
            </div>
        </MudForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
    </DialogActions>
</MudDialog>

@code {
    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; }

    private bool _success;
    private string[] _errors = { };
    MudForm _form;
    private string _coffeeName { get; set; }
    private string _coffeeDescription { get; set; }
    private decimal _coffeePrice { get; set; }
    private string _addCoffeeErrorMessage { get; set; }

    void Cancel() => MudDialog.Cancel();

    public void AddNewCoffee()
    {
        try
        {
            Debug.WriteLine("AddNewCoffee");

            _addCoffeeErrorMessage = "";

            CoffeeService.AddNewCoffee(_coffeeName, _coffeeDescription, _coffeePrice);

            Debug.WriteLine("AddNewCoffee OK");

            _form.ResetAsync();
            MudDialog.Close();
            NavManager.NavigateTo("order");
            OnInitialized();
            NavManager.NavigateTo("/product");
        }
        catch(Exception e)
        {
            _addCoffeeErrorMessage = e.Message;
        }
    }
}